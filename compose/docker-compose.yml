version: "3"
services:

  web:
    build: ./web
    image: anyforecast/web
    container_name: anyforecast-web
    ports:
      - 90:8080
    env_file:
      - .env
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:5000
      - DB_URL=${POSTGRES_URL}/anyforecast

  minio:
    build: ./minio
    image: anyforecast/minio
    container_name: anyforecast-minio
    volumes:
      - minio_data:/data
    ports:
      - 9000:9000
      - 9001:9001
    
  mlflow:
    build: ./mlflow
    image: anyforecast/mlflow
    container_name: anyforecast-mlflow
    env_file:
      - .env
    environment:
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
      - BACKEND_URI=${POSTGRES_URL}/mlflow
      - ARTIFACT_ROOT=s3://mlflow/artifacts/
    ports:
      - 5000:5000
    depends_on:
      - postgres
      - minio

  postgres:
    build: ./postgres
    image: anyforecast/postgres
    container_name: anyforecast-postgres
    env_file:
      - .env
    volumes:
      - pg_data:/var/lib/postgresql/data

  ray-head:
    build: ./ray
    image: anyforecast/ray
    ports:
      - "${REDISPORT}:${REDISPORT}"
      - "${DASHBOARDPORT}:${DASHBOARDPORT}"
      - "${HEADNODEPORT}:${HEADNODEPORT}"
    env_file:
      - .env
    command: bash -c "ray start --head --dashboard-host=0.0.0.0 --dashboard-port=${DASHBOARDPORT} --port=${REDISPORT} --redis-password=${REDISPASSWORD} --block"
    shm_size: 2g
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: '2g'

  ray-worker:
    build: ./ray
    image: anyforecast/ray
    depends_on: 
      - ray-head
    env_file:
      - .env
    command: bash -c "ray start --address=ray-head:${REDISPORT} --redis-password=${REDISPASSWORD} --num-cpus=${NUM_CPU_WORKER} --block" 
    shm_size: 2g
    deploy:
      mode: replicated
      replicas: ${NUM_WORKERS} 
      resources:
        limits:
          cpus: ${NUM_CPU_WORKER}
          memory: '2g'

volumes:
  pg_data:
  minio_data:
